<template>
  <canvas 
    class="ec-canvas" 
    canvas-id="line" 
    style="width:100%;height:500rpx;display:block;"
    @touchstart="touchStart"
    @touchmove="touchMove"
    @touchend="touchEnd"
    @init="init">
    <Tooltip :tooltip.sync="tooltip" :lx.sync="lx" :ly.sync="ly"/>
  </canvas>
</template>
<script>
import wepy from 'wepy'
import * as ec from '@/plugins/ec-canvas/echarts'
import { EChartsMixin } from '@/mixins'
import Tooltip from '@/components/tooltip'
class LineFirst extends wepy.component {

  mixins = [EChartsMixin]

  components = {
    Tooltip
  }

  data = {
    canvasId: 'line',
    ec: {
      onInit: this.initChart
    },
    tooltip: [],
    lx: 0,
    ly: 0
  };

  initChart(canvas, width, height, self) {
    const chart = ec.init(canvas, null, {
      width: width,
      height: height
    });
    canvas.setChart(chart)

    const option = {
      title: {
        text: '基础使用'
      },
      color: ["#37A2DA", "#67E0E3", "#9FE6B8"],
      legend: {
        data: ['A', 'B', 'C'],
        left: 'center',
        z: 100,
      },
      grid: {
        containLabel: true
      },
      tooltip: {
        show: true,
        trigger: 'axis'
      },
      xAxis: {
        type: 'category',
        boundaryGap: false,
        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],
        axisPointer:{
          label:{
            formatter:(d) => {
              self.tooltip = d.seriesData
              self.$apply()
            }
          }
        },
      },
      yAxis: {
        x: 'center',
        type: 'value',
        splitLine: {
          lineStyle: {
            type: 'dashed'
          }
        }
      },
      series: [{
        name: 'A',
        type: 'line',
        smooth: true,
        data: [18, 36, 65, 30, 78, 40, 33]
      }, {
        name: 'B',
        type: 'line',
        smooth: true,
        data: [12, 50, 51, 35, 70, 30, 20]
      }, {
        name: 'C',
        type: 'line',
        smooth: true,
        data: [10, 30, 31, 50, 40, 20, 10]
      }]
    }

    chart.setOption(option)
    return chart
  }
}

export default LineFirst
</script>
<style lang="less" scoped>
</style>




