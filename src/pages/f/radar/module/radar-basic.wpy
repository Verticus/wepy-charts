<template>
  <view>
    <view>基础使用</view>
    <canvas
      class="f2-canvas"
      canvas-id="RadarBasic"
      @init="init"
      @touchstart="touchStart"
      @touchmove="touchMove"
      @touchend="touchEnd"
      @longtap="press">
    </canvas>
  </view>
</template>
<script>
import wepy from 'wepy';
import F2 from '@/plugins/f2-canvas/lib/f2';
import { F2Mixin } from '@/mixins';
import _ from 'lodash';
let chart = null;
class RadarBasic extends wepy.component {
  mixins = [F2Mixin];

  data = {
    canvasId: 'RadarBasic',
    opts: {
      onInit: this.initChart
    }
  };

  initChart(canvas, width, height) {
    chart = new F2.Chart({
      el: canvas,
      width,
      height
    });

    let data = [
      {
        item: 'Design',
        user: '用户 A',
        score: 70
      },
      {
        item: 'Design',
        user: '用户 B',
        score: 30
      },
      {
        item: 'Development',
        user: '用户 A',
        score: 60
      },
      {
        item: 'Development',
        user: '用户 B',
        score: 70
      },
      {
        item: 'Marketing',
        user: '用户 A',
        score: 50
      },
      {
        item: 'Marketing',
        user: '用户 B',
        score: 60
      },
      {
        item: 'Users',
        user: '用户 A',
        score: 40
      },
      {
        item: 'Users',
        user: '用户 B',
        score: 50
      },
      {
        item: 'Test',
        user: '用户 A',
        score: 60
      },
      {
        item: 'Test',
        user: '用户 B',
        score: 70
      },
      {
        item: 'Language',
        user: '用户 A',
        score: 70
      },
      {
        item: 'Language',
        user: '用户 B',
        score: 50
      },
      {
        item: 'Technology',
        user: '用户 A',
        score: 70
      },
      {
        item: 'Technology',
        user: '用户 B',
        score: 40
      },
      {
        item: 'Support',
        user: '用户 A',
        score: 60
      },
      {
        item: 'Support',
        user: '用户 B',
        score: 40
      }
    ];
    chart.coord('polar');
    chart.source(data, {
      score: {
        min: 0,
        max: 120,
        nice: false,
        tickCount: 4
      }
    });
    chart.tooltip({
      custom: true, // 自定义 tooltip 内容框
      onChange: function onChange(obj) {
        var legend = chart.get('legendController').legends.top[0];
        var tooltipItems = obj.items;
        var legendItems = legend.items;
        var map = {};
        legendItems.map(function(item) {
          map[item.name] = _.clone(item);
        });
        tooltipItems.map(function(item) {
          var name = item.name;
          var value = item.value;
          if (map[name]) {
            map[name].value = value;
          }
        });
        legend.setItems(_.values(map));
      },
      onHide: function onHide() {
        var legend = chart.get('legendController').legends.top[0];
        legend.setItems(chart.getLegendItems().country);
      }
    });
    chart.axis('score', {
      label: function label(text, index, total) {
        if (index === total - 1) {
          return null;
        }
        return {
          top: true
        };
      },
      grid: {
        lineDash: null,
        type: 'arc' // 弧线网格
      }
    });
    chart.axis('item', {
      grid: {
        lineDash: null
      }
    });
    chart
      .line()
      .position('item*score')
      .color('user');
    chart
      .point()
      .position('item*score')
      .color('user')
      .style({
        stroke: '#fff',
        lineWidth: 1
      });
    chart.render();

    return chart;
  }
}

export default RadarBasic;
</script>
<style lang="less" scoped>
.f2-canvas {
  width: 100%;
  height: 500rpx;
}
</style>